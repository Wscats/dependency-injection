{"version":3,"sources":["../src/index.test.js"],"names":["t","glob","expected","actual","Object","keys","deepEqual","true","every","rule","pattern","join","__dirname","ignore","cwd","files","map","relative","toExport","filePath","fileName","basename","extname"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,mBAAL,EAA0B,UAAMA,CAAN;AAAA;AAAA,MACnB,QADmB,EAEnB,MAFmB;AACR,yBAAMC,KAAK,MAAL,CAAN;AAAA;AAAXC,YAAN,GAAiB,QAAjB;AACMC,UAAN,GAAeC,OAAOC,IAAP,YAAf;AACAL,MAAEM,SAAF,CAAYH,MAAZ,EAAoBD,QAApB;AAFiB;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA,CAA1B;;AAMA,mBAAK,wBAAL,EAA+B,aAAK;AACnC,KAAMC,SAAS,iCAAf;AACAH,GAAEO,IAAF,CAAOJ,OAAOK,KAAP,CAAa;AAAA,SAAQ,OAAOC,IAAP,KAAgB,UAAxB;AAAA,EAAb,CAAP;AACA,CAHD;;AAKA,SAAeR,IAAf,CAAoBS,OAApB;AAAA;AAAA,MACO,KADP;AACe,yBAAM,sBAAO,CAAC,eAAKC,IAAL,CAAUC,SAAV,EAAqBF,OAArB,CAAD,CAAP,EAAwC;AAC3DG,WAAQ,CAAC,aAAD,EAAgB,cAAhB,CADmD;AAE3DC,QAAKF;AAFsD,GAAxC,CAAN;AAAA;AAARG,SAAN,GAAc,QAAd;AAIA,mBAAOA,MAAMC,GAAN,CAAUC,QAAV,EAAoBD,GAApB,CAAwBE,QAAxB,CAAP;AAJc;AAAA;AAAA;AAAA;AADf;AAAA;;AAQA,SAASD,QAAT,CAAkBE,QAAlB,EAA4B;AAC3B,QAAO,eAAKF,QAAL,CAAcL,SAAd,EAAyBO,QAAzB,CAAP;AACA;;AAED,SAASD,QAAT,CAAkBE,QAAlB,EAA4B;AAC3B,QAAO,eAAKC,QAAL,CAAcD,QAAd,EAAwB,eAAKE,OAAL,CAAaF,QAAb,CAAxB,CAAP;AACA","file":"index.test.js","sourcesContent":["import path from 'path';\nimport test from 'ava';\nimport globby from 'globby';\nimport values from 'lodash.values';\nimport rules from '.';\n\ntest('exports all rules', async t => {\n\tconst expected = await glob('*.js');\n\tconst actual = Object.keys(rules);\n\tt.deepEqual(actual, expected);\n});\n\ntest('rules export functions', t => {\n\tconst actual = values(rules);\n\tt.true(actual.every(rule => typeof rule === 'function'));\n});\n\nasync function glob(pattern) {\n\tconst files = await globby([path.join(__dirname, pattern)], {\n\t\tignore: ['**/index.js', '**/*.test.js'],\n\t\tcwd: __dirname\n\t});\n\treturn files.map(relative).map(toExport);\n}\n\nfunction relative(filePath) {\n\treturn path.relative(__dirname, filePath);\n}\n\nfunction toExport(fileName) {\n\treturn path.basename(fileName, path.extname(fileName));\n}\n"]}