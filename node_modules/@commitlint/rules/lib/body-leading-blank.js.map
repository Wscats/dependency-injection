{"version":3,"sources":["../src/body-leading-blank.js"],"names":["parsed","when","body","negated","raw","slice","leading","succeeds"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,IAAT,EAAkB;AAChC;AACA,KAAI,CAACD,OAAOE,IAAZ,EAAkB;AACjB,SAAO,CAAC,IAAD,CAAP;AACA;;AAED,KAAMC,UAAUF,SAAS,OAAzB;;AANgC,sBAOd,uBAAQD,OAAOI,GAAf,EAAoBC,KAApB,CAA0B,CAA1B,CAPc;AAAA;AAAA,KAOzBC,OAPyB;;AAShC;;;AACA,KAAMC,WAAWD,YAAY,EAA7B;;AAEA,QAAO,CACNH,UAAU,CAACI,QAAX,GAAsBA,QADhB,EAEN,uBAAQ,CAAC,MAAD,EAASJ,UAAU,SAAV,GAAsB,MAA/B,EAAuC,yBAAvC,CAAR,CAFM,CAAP;AAIA,C","file":"body-leading-blank.js","sourcesContent":["import toLines from '@commitlint/to-lines';\nimport message from '@commitlint/message';\n\nexport default (parsed, when) => {\n\t// Flunk if no body is found\n\tif (!parsed.body) {\n\t\treturn [true];\n\t}\n\n\tconst negated = when === 'never';\n\tconst [leading] = toLines(parsed.raw).slice(1);\n\n\t// Check if the first line of body is empty\n\tconst succeeds = leading === '';\n\n\treturn [\n\t\tnegated ? !succeeds : succeeds,\n\t\tmessage(['body', negated ? 'may not' : 'must', 'have leading blank line'])\n\t];\n};\n"]}