'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _ensure = require('@commitlint/ensure');

var ensure = _interopRequireWildcard(_ensure);

var _message = require('@commitlint/message');

var _message2 = _interopRequireDefault(_message);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var negated = function negated(when) {
	return when === 'never';
};

exports.default = function (parsed, when, value) {
	var type = parsed.type;


	if (!type) {
		return [true];
	}

	var checks = (Array.isArray(value) ? value : [value]).map(function (check) {
		if (typeof check === 'string') {
			return {
				when: 'always',
				case: check
			};
		}
		return check;
	});

	var result = checks.some(function (check) {
		var r = ensure.case(type, check.case);
		return negated(check.when) ? !r : r;
	});

	var list = checks.map(function (c) {
		return c.case;
	}).join(', ');

	return [negated(when) ? !result : result, (0, _message2.default)([`type must`, negated(when) ? `not` : null, `be ${list}`])];
};

module.exports = exports['default'];
//# sourceMappingURL=type-case.js.map