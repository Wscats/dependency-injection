{"version":3,"sources":["../src/index.js"],"names":["resolveExtends","config","context","e","extends","extended","loadExtends","reduceRight","r","c","console","warn","reduce","configs","raw","load","require","resolved","resolveConfig","cwd","dirname","ctx","parserPreset","resolvedParserPreset","name","path","relative","process","split","sep","join","parserOpts","getId","prefix","first","charAt","scoped","filter","String","resolve","resolveId","id","err","legacy","localPath","silent","resolveGlobal","globalPath","Error","code"],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\n\nimport 'resolve-global'; // eslint-disable-line import/no-unassigned-import\nimport requireUncached from 'require-uncached';\nimport resolveFrom from 'resolve-from';\nimport merge from 'lodash.merge';\nimport omit from 'lodash.omit';\n\n// Resolve extend configs\nexport default function resolveExtends(config = {}, context = {}) {\n\tconst {extends: e} = config;\n\tconst extended = loadExtends(config, context).reduceRight(\n\t\t(r, c) => merge(r, omit(c, 'extends')),\n\t\te ? {extends: e} : {}\n\t);\n\n\t// Remove deprecation warning in version 3\n\tif (typeof config === 'object' && 'wildcards' in config) {\n\t\tconsole.warn(\n\t\t\t`'wildcards' found in top-level configuration ignored. Remove them from your config to silence this warning.`\n\t\t);\n\t}\n\n\treturn merge({}, extended, config);\n}\n\n// (any, string, string, Function) => any[];\nfunction loadExtends(config = {}, context = {}) {\n\treturn (config.extends || []).reduce((configs, raw) => {\n\t\tconst load = context.require || require;\n\t\tconst resolved = resolveConfig(raw, context);\n\t\tconst c = load(resolved);\n\t\tconst cwd = path.dirname(resolved);\n\n\t\t// Remove deprecation warning in version 3\n\t\tif (typeof c === 'object' && 'wildcards' in c) {\n\t\t\tconsole.warn(\n\t\t\t\t`'wildcards' found in '${raw}' ignored. To silence this warning raise an issue at 'npm repo ${raw}' to remove the wildcards.`\n\t\t\t);\n\t\t}\n\n\t\tconst ctx = merge({}, context, {cwd});\n\n\t\t// Resolve parser preset if none was present before\n\t\tif (\n\t\t\t!context.parserPreset &&\n\t\t\ttypeof c === 'object' &&\n\t\t\ttypeof c.parserPreset === 'string'\n\t\t) {\n\t\t\tconst resolvedParserPreset = resolveFrom(cwd, c.parserPreset);\n\t\t\tconst parserPreset = {\n\t\t\t\tname: c.parserPreset,\n\t\t\t\tpath: `./${path.relative(process.cwd(), resolvedParserPreset)}`\n\t\t\t\t\t.split(path.sep)\n\t\t\t\t\t.join('/'),\n\t\t\t\tparserOpts: require(resolvedParserPreset)\n\t\t\t};\n\n\t\t\tctx.parserPreset = parserPreset;\n\t\t\tconfig.parserPreset = parserPreset;\n\t\t}\n\n\t\treturn [...configs, c, ...loadExtends(c, ctx)];\n\t}, []);\n}\n\nfunction getId(raw = '', prefix = '') {\n\tconst first = raw.charAt(0);\n\tconst scoped = first === '@';\n\tconst relative = first === '.';\n\treturn scoped || relative ? raw : [prefix, raw].filter(String).join('-');\n}\n\nfunction resolveConfig(raw, context = {}) {\n\tconst resolve = context.resolve || resolveId;\n\tconst id = getId(raw, context.prefix);\n\n\ttry {\n\t\treturn resolve(id, context);\n\t} catch (err) {\n\t\tconst legacy = getId(raw, 'conventional-changelog-lint-config');\n\t\tconst resolved = resolve(legacy, context);\n\t\tconsole.warn(\n\t\t\t`Resolving ${raw} to legacy config ${legacy}. To silence this warning raise an issue at 'npm repo ${legacy}' to rename to ${id}.`\n\t\t);\n\t\treturn resolved;\n\t}\n}\n\nfunction resolveId(id, context = {}) {\n\tconst cwd = context.cwd || process.cwd();\n\tconst localPath = resolveFrom.silent(cwd, id);\n\n\tif (typeof localPath === 'string') {\n\t\treturn localPath;\n\t}\n\n\tconst resolveGlobal = requireUncached('resolve-global');\n\tconst globalPath = resolveGlobal.silent(id);\n\n\tif (typeof globalPath === 'string') {\n\t\treturn globalPath;\n\t}\n\n\tconst err = new Error(`Cannot find module \"${id}\" from \"${cwd}\"`);\n\terr.code = 'MODULE_NOT_FOUND';\n\tthrow err;\n}\n"]}