'use strict';

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _lodash = require('lodash.includes');

var _lodash2 = _interopRequireDefault(_lodash);

var _ = require('.');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ok = _chalk2.default.bold(`${_chalk2.default.green('✔')}   found 0 problems, 0 warnings`);

(0, _ava2.default)('does nothing without arguments', function (t) {
	var actual = (0, _2.default)();
	t.deepEqual(actual, [ok]);
});

(0, _ava2.default)('does nothing without .errors and .warnings', function (t) {
	var actual = (0, _2.default)({});
	t.deepEqual(actual, [ok]);
});

(0, _ava2.default)('returns empty summary of problems for empty .errors and .warnings', function (t) {
	var _format = (0, _2.default)({
		errors: [],
		warnings: []
	}),
	    _format2 = (0, _slicedToArray3.default)(_format, 1),
	    msg = _format2[0];

	t.true(msg.includes('0 problems, 0 warnings'));
});

(0, _ava2.default)('returns a correct of empty .errors and .warnings', function (t) {
	var _format3 = (0, _2.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}),
	    _format4 = (0, _slicedToArray3.default)(_format3, 3),
	    err = _format4[0],
	    prob = _format4[1],
	    msg = _format4[2];

	t.true((0, _lodash2.default)(err, 'There was an error'));
	t.true((0, _lodash2.default)(prob, 'There was a problem'));
	t.true((0, _lodash2.default)(msg, '1 problems, 1 warnings'));
});

(0, _ava2.default)('uses appropriate signs by default', function (t) {
	var _format5 = (0, _2.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}),
	    _format6 = (0, _slicedToArray3.default)(_format5, 2),
	    err = _format6[0],
	    warn = _format6[1];

	t.true((0, _lodash2.default)(err, '✖'));
	t.true((0, _lodash2.default)(warn, '⚠'));
});

(0, _ava2.default)('uses signs as configured', function (t) {
	var _format7 = (0, _2.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}, {
		signs: ['HNT', 'WRN', 'ERR']
	}),
	    _format8 = (0, _slicedToArray3.default)(_format7, 2),
	    err = _format8[0],
	    warn = _format8[1];

	t.true((0, _lodash2.default)(err, 'ERR'));
	t.true((0, _lodash2.default)(warn, 'WRN'));
});
//# sourceMappingURL=index.test.js.map