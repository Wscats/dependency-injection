{"version":3,"sources":["../src/index.test.js"],"names":["t","deepEqual"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,mBAAK,wCAAL,EAA+C,aAAK;AACnDA,GAAEC,SAAF,CAAY,iBAAZ,EAAuB,EAAvB;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDD,GAAEC,SAAF,CAAY,gBAAQ,IAAR,CAAZ,EAA2B,EAA3B;AACA,CAFD;;AAIA,mBAAK,+CAAL,EAAsD,aAAK;AAC1DD,GAAEC,SAAF,CAAY,gBAAQ,EAAR,CAAZ,EAAyB,CAAC,EAAD,CAAzB;AACA,CAFD;;AAIA,mBAAK,0BAAL,EAAiC,aAAK;AACrCD,GAAEC,SAAF,CAAY,gBAAQ,mBAAR,CAAZ,EAA0C,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAA1C;AACA,CAFD;;AAIA,mBAAK,6BAAL,EAAoC,aAAK;AACxCD,GAAEC,SAAF,CAAY,gBAAQ,uBAAR,CAAZ,EAA8C,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAA9C;AACA,CAFD","file":"index.test.js","sourcesContent":["import test from 'ava';\nimport toLines from '.';\n\ntest('should return an array for empty input', t => {\n\tt.deepEqual(toLines(), []);\n});\n\ntest('should return an array for null input', t => {\n\tt.deepEqual(toLines(null), []);\n});\n\ntest('should return an array for empty string input', t => {\n\tt.deepEqual(toLines(''), ['']);\n});\n\ntest('should split LF newlines', t => {\n\tt.deepEqual(toLines('some\\nweird\\ntext'), ['some', 'weird', 'text']);\n});\n\ntest('should split CR+LF newlines', t => {\n\tt.deepEqual(toLines('some\\r\\nweird\\r\\ntext'), ['some', 'weird', 'text']);\n});\n"]}