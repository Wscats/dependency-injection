{"version":3,"sources":["../src/case.js"],"names":["ensureCase","raw","target","input","String","transformed","toCase","toUpperCase","word","split","charAt","slice","length","toLowerCase","TypeError"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEeA,U;;;AAEf,SAASA,UAAT,GAAoD;AAAA,KAAhCC,GAAgC,uEAA1B,EAA0B;AAAA,KAAtBC,MAAsB,uEAAb,WAAa;;AACnD,KAAMC,QAAQC,OAAOH,GAAP,CAAd;AACA,KAAMI,cAAcC,OAAOH,KAAP,EAAcD,MAAd,CAApB;;AAEA,KAAIG,gBAAgB,EAApB,EAAwB;AACvB,SAAO,IAAP;AACA;;AAED,QAAOA,gBAAgBF,KAAvB;AACA;;AAED,SAASG,MAAT,CAAgBH,KAAhB,EAAuBD,MAAvB,EAA+B;AAC9B,SAAQA,MAAR;AACC,OAAK,YAAL;AACC,UAAO,sBAAUC,KAAV,CAAP;AACD,OAAK,YAAL;AACC,UAAO,sBAAUA,KAAV,CAAP;AACD,OAAK,YAAL;AACC,UAAO,sBAAUA,KAAV,CAAP;AACD,OAAK,aAAL;AACC,UAAO,sBAAW,sBAAUA,KAAV,CAAX,CAAP;AACD,OAAK,YAAL;AACC,UAAO,uBAAUA,KAAV,CAAP;AACD,OAAK,YAAL;AACA,OAAK,WAAL;AACC,UAAOA,MAAMI,WAAN,EAAP;AACD,OAAK,eAAL;AACA,OAAK,cAAL;AAAqB;AACpB,QAAMC,OAAOL,MAAMM,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb;AACA,WAAQ,GAAEH,OAAOE,KAAKE,MAAL,CAAY,CAAZ,CAAP,EAAuB,YAAvB,CAAqC,GAAEJ,OAChDE,KAAKG,KAAL,CAAW,CAAX,CADgD,EAEhD,YAFgD,CAG/C,GAAER,MAAMQ,KAAN,CAAYH,KAAKI,MAAjB,CAAyB,EAH7B;AAIA;AACD,OAAK,YAAL;AACA,OAAK,WAAL;AACA,OAAK,WAAL;AAAkB;AACjB,UAAOT,MAAMU,WAAN,EAAP;AACD;AACC,SAAM,IAAIC,SAAJ,CAAe,qCAAoCZ,MAAO,GAA1D,CAAN;AA3BF;AA6BA","file":"case.js","sourcesContent":["import camelCase from 'lodash.camelcase';\nimport kebabCase from 'lodash.kebabcase';\nimport snakeCase from 'lodash.snakecase';\nimport upperFirst from 'lodash.upperfirst';\nimport startCase from 'lodash.startcase';\n\nexport default ensureCase;\n\nfunction ensureCase(raw = '', target = 'lowercase') {\n\tconst input = String(raw);\n\tconst transformed = toCase(input, target);\n\n\tif (transformed === '') {\n\t\treturn true;\n\t}\n\n\treturn transformed === input;\n}\n\nfunction toCase(input, target) {\n\tswitch (target) {\n\t\tcase 'camel-case':\n\t\t\treturn camelCase(input);\n\t\tcase 'kebab-case':\n\t\t\treturn kebabCase(input);\n\t\tcase 'snake-case':\n\t\t\treturn snakeCase(input);\n\t\tcase 'pascal-case':\n\t\t\treturn upperFirst(camelCase(input));\n\t\tcase 'start-case':\n\t\t\treturn startCase(input);\n\t\tcase 'upper-case':\n\t\tcase 'uppercase':\n\t\t\treturn input.toUpperCase();\n\t\tcase 'sentence-case':\n\t\tcase 'sentencecase': {\n\t\t\tconst word = input.split(' ')[0];\n\t\t\treturn `${toCase(word.charAt(0), 'upper-case')}${toCase(\n\t\t\t\tword.slice(1),\n\t\t\t\t'lower-case'\n\t\t\t)}${input.slice(word.length)}`;\n\t\t}\n\t\tcase 'lower-case':\n\t\tcase 'lowercase':\n\t\tcase 'lowerCase': // Backwards compat config-angular v4\n\t\t\treturn input.toLowerCase();\n\t\tdefault:\n\t\t\tthrow new TypeError(`ensure-case: Unknown target case \"${target}\"`);\n\t}\n}\n"]}