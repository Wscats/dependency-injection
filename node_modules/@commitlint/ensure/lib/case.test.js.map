{"version":3,"sources":["../src/case.test.js"],"names":["actual","t","is","console","log"],"mappings":"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","file":"case.test.js","sourcesContent":["import test from 'ava';\nimport ensure from './case';\n\ntest('true for no params', t => {\n\tconst actual = ensure();\n\tt.is(actual, true);\n});\n\ntest('true for empty', t => {\n\tconst actual = ensure('');\n\tt.is(actual, true);\n});\n\ntest('true for lowercase', t => {\n\tconst actual = ensure('a');\n\tt.is(actual, true);\n});\n\ntest('false for uppercase', t => {\n\tconst actual = ensure('A');\n\tt.is(actual, false);\n});\n\ntest('true for lowercase on lowercase', t => {\n\tconst actual = ensure('a', 'lowercase');\n\tt.is(actual, true);\n});\n\ntest('false for uppercase on lowercase', t => {\n\tconst actual = ensure('A', 'lowercase');\n\tt.is(actual, false);\n});\n\ntest('true for * on lowercase', t => {\n\tconst actual = ensure('*', 'lowercase');\n\tconsole.log({actual});\n\tt.is(actual, true);\n});\n\ntest('true for uppercase on uppercase', t => {\n\tconst actual = ensure('A', 'uppercase');\n\tt.is(actual, true);\n});\n\ntest('false for lowercase on uppercase', t => {\n\tconst actual = ensure('a', 'uppercase');\n\tt.is(actual, false);\n});\n\ntest('true for * on uppercase', t => {\n\tconst actual = ensure('*', 'uppercase');\n\tt.is(actual, true);\n});\n\ntest('true for sentencecase on sentencecase', t => {\n\tconst actual = ensure('Sentence case', 'sentence-case');\n\tt.is(actual, true);\n});\n\ntest('false for lowercase on sentencecase', t => {\n\tt.is(ensure('sentence case', 'sentence-case'), false);\n});\n\ntest('false for UPPERCASE on sentencecase', t => {\n\tt.is(ensure('UPPERCASE', 'sentence-case'), false);\n});\n\ntest('true for Start Case on sentencecase', t => {\n\tt.is(ensure('Start Case', 'sentence-case'), true);\n});\n\ntest('false for PascalCase on sentencecase', t => {\n\tt.is(ensure('PascalCase', 'sentence-case'), false);\n});\n\ntest('false for kebab-case on sentencecase', t => {\n\tt.is(ensure('kebab-case', 'sentence-case'), false);\n});\n\ntest('false for snake_case on sentencecase', t => {\n\tt.is(ensure('snake_case', 'sentence-case'), false);\n});\n\ntest('false for camelCase on sentencecase', t => {\n\tt.is(ensure('camelCase', 'sentence-case'), false);\n});\n\ntest('true for * on sentence-case', t => {\n\tconst actual = ensure('*', 'sentence-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on camel-case', t => {\n\tconst actual = ensure('*', 'camel-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on kebab-case', t => {\n\tconst actual = ensure('*', 'kebab-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on snake-case', t => {\n\tconst actual = ensure('*', 'snake-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on pascal-case', t => {\n\tconst actual = ensure('*', 'snake-case');\n\tt.is(actual, true);\n});\n\ntest('true for * on start-case', t => {\n\tconst actual = ensure('*', 'snake-case');\n\tt.is(actual, true);\n});\n"]}